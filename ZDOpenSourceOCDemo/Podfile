# Uncomment the next line to define a global platform for your project

platform :ios, '10.0'
inhibit_all_warnings!

def pods_git
  	# pod 'ZDTableViewBinding', :git => 'https://github.com/faimin/ZDTableViewBinding'
  	pod 'ZDNetWorkHelper', :git => 'https://github.com/faimin/ZDNetWorkHelper'
  	pod 'ZDToolKit', :git => 'https://github.com/faimin/ZDToolKit', :branch => 'develop'
end

def pods_reactive
	pod 'ReactiveObjC'
end

def pods_promise
	pod 'PromiseKit'
end

def pods_layout
	pod 'Texture'
	pod 'IGListKit'
	pod 'YogaKit'
	pod 'Masonry'
end

def pods_router
	pod 'ZIKRouter'
	pod 'JLRoutes'
end

def pods_network
	pod 'YTKNetwork'
	pod 'YYModel'
	#pod 'ResponseDetective'
	#pod 'Wormholy', :configurations => ['Debug'] #通过hook URLSession实现
end

def pods_animation
  pod 'lottie-ios'
end

def pods_tabBarController
	pod 'RDVTabBarController'
  pod 'RTRootNavigationController'
end

def pods_extension
	pod 'ObjectiveSugar', :inhibit_warnings => true
  pod 'LinqToObjectiveC'
end

def pods_color
	pod 'ChameleonFramework'
end

def pods_toast
	pod 'SVProgressHUD'
  pod 'MBProgressHUD'
  pod 'Toast'
end

def pods_cache
	pod 'YYCache'
end

def pods_thread
	pod 'YYDispatchQueuePool'
end

def pods_injection
	pod 'libextobjc'
  pod 'Objection'
  pod 'Typhoon'
end

def pods_swizzle
	pod 'fishhook'
  pod 'RSSwizzle'
end

def pods_tools
	pod 'DirectoryWatchdog'
  pod 'coobjc'    # 协程
  pod 'MMKV'      # mmap
end

def pod_flipper
  flipperkit_version = '0.22.0'
    
  pod 'FlipperKit', '~>' + flipperkit_version
  pod 'FlipperKit/FlipperKitLayoutComponentKitSupport', '~>' + flipperkit_version
  pod 'FlipperKit/SKIOSNetworkPlugin', '~>' + flipperkit_version
  pod 'FlipperKit/FlipperKitUserDefaultsPlugin', '~>' + flipperkit_version
end

def pods_debug
	# pod 'KZPlayground', :inhibit_warnings => true
	# pod 'Buglife', :configurations => ['Debug']
  pod 'GDPerformanceView', :configurations => ['Debug']
	pod 'FLEX', :configurations => ['Debug']
  pod 'LayoutInspector', :configurations => ['Debug']
  pod 'ResumableAssert', :configurations => ['Debug']
  
  pod_flipper
end

# ----------------------------

def pods_oc
	pods_reactive
	pods_promise
	pods_layout
	pods_tabBarController
	pods_router
	pods_network
	pods_animation
	pods_extension
	pods_color
	pods_cache
	pods_toast
	pods_thread
	pods_injection
	pods_swizzle
	pods_tools
	pods_debug
end

target 'ZDOpenSourceOCDemo' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  # use_frameworks!
  supports_swift_versions '>= 4.0', '<= 5.0' # cocoaPods 1.7

  # Pods for ZDOpenSourceOCDemo
  pods_oc
  pods_git

  target 'ZDOpenSourceOCDemoTests' do
    inherit! :search_paths
    # Pods for testing
  end

  target 'ZDOpenSourceOCDemoUITests' do
    inherit! :search_paths
    # Pods for testing
  end

end


#############################################################

install! 'cocoapods', :generate_multiple_pod_projects => true, :incremental_installation => true

############################################################


# https://github.com/facebook/flipper/issues/254
$dynamic_framework = ['LayoutInspector', 'PromiseKit']
pre_install do |installer|
    installer.pod_targets.each do |pod|
        if $dynamic_framework.include?(pod.name)
            pod.instance_variable_set(:@host_requires_frameworks, true)
        end
    end
end

#config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO' #可以让pod中的类调用[UIApplication shareApplication]
#关闭`This block declaration is not a prototype,Insert ‘void'`警告
#config.build_settings['CLANG_WARN_STRICT_PROTOTYPES'] = 'NO'
post_install do |installer|
    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            #关闭block内直接引用全局变量的警告
            config.build_settings['CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF'] = 'NO'
        end
    end
    
    # **************** flipper ************
    # https://github.com/facebook/flipper/blob/master/docs/getting-started.md
    file_name = Dir.glob("*.xcodeproj")[0]
    app_project = Xcodeproj::Project.open(file_name)
    app_project.native_targets.each do |target|
      target.build_configurations.each do |config|
        cflags = config.build_settings['OTHER_CFLAGS'] || '$(inherited) '
        unless cflags.include? '-DFB_SONARKIT_ENABLED=1'
          puts 'Adding -DFB_SONARKIT_ENABLED=1 in OTHER_CFLAGS...'
          cflags << '-DFB_SONARKIT_ENABLED=1'
        end
        config.build_settings['OTHER_CFLAGS'] = cflags
      end
      app_project.save
    end
    installer.pods_project.save
    
    # Pod::PodTarget.send(:define_method, :static_framework?) { return true }
end

